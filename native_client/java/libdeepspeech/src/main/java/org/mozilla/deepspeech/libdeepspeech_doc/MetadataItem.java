/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.mozilla.deepspeech.libdeepspeech;

/**
 * Stores each individual character, along with its timing information
 */
public class MetadataItem {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected MetadataItem(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MetadataItem obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  /**
   *  The character generated for transcription 
   */
  public void setCharacter(String value) {
    implJNI.MetadataItem_character_set(swigCPtr, this, value);
  }

  /**
   *  The character generated for transcription 
   */
  public String getCharacter() {
    return implJNI.MetadataItem_character_get(swigCPtr, this);
  }

  /**
   *  Position of the character in units of 20ms 
   */
  public void setTimestep(int value) {
    implJNI.MetadataItem_timestep_set(swigCPtr, this, value);
  }

  /**
   *  Position of the character in units of 20ms 
   */
  public int getTimestep() {
    return implJNI.MetadataItem_timestep_get(swigCPtr, this);
  }

  /**
   *  Position of the character in seconds 
   */
  public void setStart_time(float value) {
    implJNI.MetadataItem_start_time_set(swigCPtr, this, value);
  }

  /**
   *  Position of the character in seconds 
   */
  public float getStart_time() {
    return implJNI.MetadataItem_start_time_get(swigCPtr, this);
  }

}
